openapi: 3.0.3
info:
  title: Product Service API
  version: 1.0.0
  description: API for managing products in the e-commerce platform

servers:
  - url: http://localhost:8191/api/v2
    description: Local server

paths:
  /products:
    post:
      summary: Create a new product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '200':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'

    get:
      summary: Get all products
      operationId: getAllProducts
      responses:
        '200':
          description: List of all products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'

  /products/{id}:
    get:
      summary: Get a product by ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Product not found

    put:
      summary: Update an existing product
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Product not found

    delete:
      summary: Delete a product
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found

components:
  schemas:

    ProductResponse:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        brand:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 50
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
        imageUrl:
          type: string
          format: uri
          maxLength: 255
        tags:
          type: array
          maxItems: 10
          items:
            type: string
        category:
          type: array
          minItems: 1
          items:
            type: string

    CreateProductRequest:
      type: object
      required:
        - name
        - description
        - price
        - category
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        price:
          type: number
          format: double
          minimum: 0.01
        quantity:
          type: integer
          minimum: 0
        brand:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 50
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          example: INR
        imageUrl:
          type: string
          format: uri
          maxLength: 255
        tags:
          type: array
          maxItems: 10
          items:
            type: string
            minLength: 1
        category:
          type: array
          minItems: 1
          items:
            type: string
            minLength: 1